
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://pecrqdynmkgvqiasriwv.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InBlY3JxZHlubWtndnFpYXNyaXd2Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDE3NDE4MjMsImV4cCI6MjA1NzMxNzgyM30.ChokD92odrZwYLaVlB8PB7XbStmTmzVP4MYiKX47mWU";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Add logging to auth events
supabase.auth.onAuthStateChange((event, session) => {
  // We'll implement a simple way to log auth events
  // The actual logging will be done in another file to avoid circular dependencies
  console.log(`Auth state changed: ${event}`);
  const logAuthEvent = async () => {
    try {
      if (!session) {
        // For events like SIGNED_OUT
        await supabase.from('activity_logs').insert({
          action: `auth_${event.toLowerCase()}`,
          target_type: 'authentication',
          details: { event }
        });
        return;
      }
      
      // For events with a user session
      await supabase.from('activity_logs').insert({
        user_id: session.user.id,
        username: session.user.email,
        action: `auth_${event.toLowerCase()}`,
        target_type: 'authentication',
        details: { 
          event,
          email: session.user.email
        }
      });
    } catch (error) {
      console.error('Failed to log auth event:', error);
    }
  };
  
  logAuthEvent();
});
